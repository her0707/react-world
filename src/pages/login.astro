---
import Input from "@/components/input/Input.astro";
import GlobalStyles from "@/components/GlobalStyles.astro";
import Button from "@/components/button/Button";
import { _post } from "@/services/http-client";
import { API } from "@/constants/api";
import { setUser } from "@/utils/auth";
import { ROUTES } from "@/constants/routes";
import type { RegisterError } from "@/types/auth";

interface LoginError {
  email: string;
  password: string;
  emailOrPassword: string;
}

let errors: LoginError = { email: "", password: "", emailOrPassword: "" };
if (Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData();

    const email = data.get("email");
    if (!email) {
      errors.email = "Email is Required.";
    }

    const password = data.get("password");

    if (!password) {
      errors.password = "Password is Required.";
    }

    const isError = Object.values(errors).some(message => message);

    if (!isError) {
      const result = await _post(
        API.LOGIN,
        JSON.stringify({
          user: {
            email,
            password,
          },
        }),
      );
      setUser(Astro, result);

      return Astro.redirect(ROUTES.INDEX);
    }
  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    } else if (error instanceof Object) {
      const errorObj = error as RegisterError;

      errors = {
        ...errors,
        email: errorObj.errors.email?.join(", ") || "",
        password: errorObj.errors.password?.join(", ") || "",
        emailOrPassword: errorObj.errors["email or password"] ? "Email or Passowrd is invalid" : "",
      };
    }
  }
}
---

<html>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
  </head>
  <body id="app">
    <GlobalStyles />
    <div class="container">
      <h1>Sign In</h1>
      <form method="POST" id="login_form">
        {errors.emailOrPassword && <p class="error">{errors.emailOrPassword}</p>}
        <Input
          id="email"
          name="email"
          labelText="Email"
          placeholder="Please input your email"
          required="true"
          errorMessage={errors.email}
        />
        <Input
          id="password"
          name="password"
          labelText="Password"
          placeholder="Please input your password"
          required="true"
          type="password"
          errorMessage={errors.password}
        />
        <Button id="submit_btn" type="submit" size="base" color="primary" rounded="base" width="full" client:load>
          Sign In
        </Button>
      </form>
    </div>
  </body>
</html>

<script>
  const form = document.getElementById("login_form") as HTMLFormElement;

  form?.addEventListener("submit", e => {
    e.preventDefault();
    const email = document.getElementById("email") as HTMLInputElement;
    email.readOnly = true;
    const password = document.getElementById("password") as HTMLInputElement;
    password.readOnly = true;
    const submitBtn = document.getElementById("submit_btn") as HTMLButtonElement;
    submitBtn.disabled = true;
    form.submit();
  });
</script>

<style>
  .container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100vh;
    row-gap: 40px;
  }

  form {
    width: 320px;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    row-gap: 20px;
  }

  .error {
    color: #ff2b2b;
    font-size: 12px;
    margin: 0;
  }
</style>
