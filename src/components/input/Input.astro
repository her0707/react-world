---
import type { HTMLAttributes } from "astro/types";
import { Image } from "astro:assets";

import ClearIcon from "@/assets/icons/clear-icon.svg";

interface Props extends HTMLAttributes<"input"> {
  labelText?: string;
  errorMessage?: string;
}

const props = Astro.props;
---

<astro-input data-name={props.name} class="container">
  <label class="label" for={props.name}>
    {props.labelText && <span class="label-text">{props.labelText}</span>}
    <span class="input-container">
      <input {...props} class="astro-input" />

      <a class="clear-icon-button" id="clear-icon">
        <Image src={ClearIcon} alt={"clear-icon"} width={20} height={20} />
      </a>
    </span>
    {props.errorMessage && <p class="error">{props.errorMessage}</p>}
  </label>
</astro-input>

<script>
  class AstroInput extends HTMLElement {
    constructor() {
      super();

      const clearIcon = this.querySelector("#clear-icon");
      const input = this.querySelector(`[name=${this.dataset.name}]`) as HTMLInputElement;

      input?.addEventListener("input", e => {
        const { value } = e.target as HTMLInputElement;
        if (value) {
          clearIcon?.classList.add("visible");
        } else {
          clearIcon?.classList.remove("visible");
        }
      });
      clearIcon?.addEventListener("click", () => {
        input.value = "";
        clearIcon?.classList.remove("visible");
      });
    }
  }

  customElements.define("astro-input", AstroInput);
</script>

<style>
  .container {
    background-color: #fff;
    width: 100%;
  }

  .label {
    display: flex;
    flex-direction: column;
    row-gap: 4px;
  }

  .label-text {
    font-size: 18px;
    font-weight: bold;
  }

  .input-container {
    border-radius: 10px;
    padding-left: 12px;
    padding-right: 4px;
    border-style: solid;
    border-width: 1px;
    color: #1f2024;
    align-items: center;
    display: flex;
    border: 1px solid #e5e5e5;
  }

  .input-container:focus-within {
    border-color: #1f2024;
  }

  input {
    border: none;
    border-bottom-right-radius: 4px;
    border-top-right-radius: 4px;
    color: #1f2024;
    display: block;
    flex: 1 1 auto;
    font-size: 1rem;
    height: 16px;
    line-height: 26px;
    padding-bottom: 11px;
    padding-left: 0;
    padding-right: 0;
    padding-top: 11px;
    width: 100%;
    outline: none;
  }
  input::placeholder {
    color: #c3c5c9;
  }

  .clear-icon-button {
    height: 20px;
    cursor: pointer;
    display: none;
  }

  .clear-icon-button.visible {
    display: block;
  }

  .clear-icon {
    width: 20px;
    height: 20px;
    color: #c3c5c9;
  }

  .error {
    color: #ff2b2b;
    font-size: 12px;
    margin: 0;
  }
</style>
